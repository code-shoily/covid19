["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/html/safehtml.js"],"~:js","goog.provide(\"goog.html.SafeHtml\");\ngoog.require(\"goog.array\");\ngoog.require(\"goog.asserts\");\ngoog.require(\"goog.dom.TagName\");\ngoog.require(\"goog.dom.tags\");\ngoog.require(\"goog.html.SafeScript\");\ngoog.require(\"goog.html.SafeStyle\");\ngoog.require(\"goog.html.SafeStyleSheet\");\ngoog.require(\"goog.html.SafeUrl\");\ngoog.require(\"goog.html.TrustedResourceUrl\");\ngoog.require(\"goog.html.trustedtypes\");\ngoog.require(\"goog.i18n.bidi.Dir\");\ngoog.require(\"goog.i18n.bidi.DirectionalString\");\ngoog.require(\"goog.labs.userAgent.browser\");\ngoog.require(\"goog.object\");\ngoog.require(\"goog.string.Const\");\ngoog.require(\"goog.string.TypedString\");\ngoog.require(\"goog.string.internal\");\ngoog.html.SafeHtml = class {\n  constructor(value, dir, token) {\n    this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = token === goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : \"\";\n    this.dir_ = dir;\n  }\n};\ngoog.html.SafeHtml.ENABLE_ERROR_MESSAGES = goog.define(\"goog.html.SafeHtml.ENABLE_ERROR_MESSAGES\", goog.DEBUG);\ngoog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE = goog.define(\"goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE\", true);\ngoog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;\ngoog.html.SafeHtml.prototype.getDirection = function() {\n  return this.dir_;\n};\ngoog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;\ngoog.html.SafeHtml.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n};\nif (goog.DEBUG) {\n  goog.html.SafeHtml.prototype.toString = function() {\n    return \"SafeHtml{\" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + \"}\";\n  };\n}\ngoog.html.SafeHtml.unwrap = function(safeHtml) {\n  return goog.html.SafeHtml.unwrapTrustedHTML(safeHtml).toString();\n};\ngoog.html.SafeHtml.unwrapTrustedHTML = function(safeHtml) {\n  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml) {\n    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n  } else {\n    goog.asserts.fail(\"expected object of type SafeHtml, got '\" + safeHtml + \"' of type \" + goog.typeOf(safeHtml));\n    return \"type_error:SafeHtml\";\n  }\n};\ngoog.html.SafeHtml.TextOrHtml_;\ngoog.html.SafeHtml.htmlEscape = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var textIsObject = typeof textOrHtml == \"object\";\n  var dir = null;\n  if (textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString) {\n    dir = textOrHtml.getDirection();\n  }\n  var textAsString;\n  if (textIsObject && textOrHtml.implementsGoogStringTypedString) {\n    textAsString = textOrHtml.getTypedStringValue();\n  } else {\n    textAsString = String(textOrHtml);\n  }\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(textAsString), dir);\n};\ngoog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());\n};\ngoog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());\n};\ngoog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;\ngoog.html.SafeHtml.comment = function(text) {\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"\\x3c!--\" + goog.string.internal.htmlEscape(text) + \"--\\x3e\", null);\n};\ngoog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;\ngoog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet(\"action\", \"cite\", \"data\", \"formaction\", \"href\", \"manifest\", \"poster\", \"src\");\ngoog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);\ngoog.html.SafeHtml.AttributeValue;\ngoog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {\n  goog.html.SafeHtml.verifyTagName(String(tagName));\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), opt_attributes, opt_content);\n};\ngoog.html.SafeHtml.verifyTagName = function(tagName) {\n  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {\n    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? \"Invalid tag name \\x3c\" + tagName + \"\\x3e.\" : \"\");\n  }\n  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {\n    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? \"Tag name \\x3c\" + tagName + \"\\x3e is not allowed for SafeHtml.\" : \"\");\n  }\n};\ngoog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  if (opt_src) {\n    goog.html.TrustedResourceUrl.unwrap(opt_src);\n  }\n  var fixedAttributes = {};\n  fixedAttributes[\"src\"] = opt_src || null;\n  fixedAttributes[\"srcdoc\"] = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);\n  var defaultAttributes = {\"sandbox\":\"\"};\n  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\", attributes, opt_content);\n};\ngoog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  if (!goog.html.SafeHtml.canUseSandboxIframe()) {\n    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? \"The browser does not support sandboxed iframes.\" : \"\");\n  }\n  var fixedAttributes = {};\n  if (opt_src) {\n    fixedAttributes[\"src\"] = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));\n  } else {\n    fixedAttributes[\"src\"] = null;\n  }\n  fixedAttributes[\"srcdoc\"] = opt_srcdoc || null;\n  fixedAttributes[\"sandbox\"] = \"\";\n  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"iframe\", attributes, opt_content);\n};\ngoog.html.SafeHtml.canUseSandboxIframe = function() {\n  return goog.global[\"HTMLIFrameElement\"] && \"sandbox\" in goog.global[\"HTMLIFrameElement\"].prototype;\n};\ngoog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {\n  goog.html.TrustedResourceUrl.unwrap(src);\n  var fixedAttributes = {\"src\":src};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\", attributes);\n};\ngoog.html.SafeHtml.createScript = function(script, opt_attributes) {\n  for (var attr in opt_attributes) {\n    if (Object.prototype.hasOwnProperty.call(opt_attributes, attr)) {\n      var attrLower = attr.toLowerCase();\n      if (attrLower == \"language\" || attrLower == \"src\" || attrLower == \"text\" || attrLower == \"type\") {\n        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set \"' + attrLower + '\" attribute' : \"\");\n      }\n    }\n  }\n  var content = \"\";\n  script = goog.array.concat(script);\n  for (var i = 0; i < script.length; i++) {\n    content += goog.html.SafeScript.unwrap(script[i]);\n  }\n  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"script\", opt_attributes, htmlContent);\n};\ngoog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {\n  var fixedAttributes = {\"type\":\"text/css\"};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);\n  var content = \"\";\n  styleSheet = goog.array.concat(styleSheet);\n  for (var i = 0; i < styleSheet.length; i++) {\n    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);\n  }\n  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"style\", attributes, htmlContent);\n};\ngoog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {\n  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\n  if (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) {\n    if (goog.string.internal.contains(unwrappedUrl, \";\")) {\n      unwrappedUrl = \"'\" + unwrappedUrl.replace(/'/g, \"%27\") + \"'\";\n    }\n  }\n  var attributes = {\"http-equiv\":\"refresh\", \"content\":(opt_secs || 0) + \"; url\\x3d\" + unwrappedUrl};\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\"meta\", attributes);\n};\ngoog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {\n  if (value instanceof goog.string.Const) {\n    value = goog.string.Const.unwrap(value);\n  } else {\n    if (name.toLowerCase() == \"style\") {\n      if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {\n        value = goog.html.SafeHtml.getStyleValue_(value);\n      } else {\n        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"style\" not supported.' : \"\");\n      }\n    } else {\n      if (/^on/i.test(name)) {\n        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"' + name + '\" requires goog.string.Const value, \"' + value + '\" given.' : \"\");\n      } else {\n        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {\n          if (value instanceof goog.html.TrustedResourceUrl) {\n            value = goog.html.TrustedResourceUrl.unwrap(value);\n          } else {\n            if (value instanceof goog.html.SafeUrl) {\n              value = goog.html.SafeUrl.unwrap(value);\n            } else {\n              if (typeof value === \"string\") {\n                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();\n              } else {\n                throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"' + name + '\" on tag \"' + tagName + '\" requires goog.html.SafeUrl, goog.string.Const, or' + ' string, value \"' + value + '\" given.' : \"\");\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if (value.implementsGoogStringTypedString) {\n    value = value.getTypedStringValue();\n  }\n  goog.asserts.assert(typeof value === \"string\" || typeof value === \"number\", \"String or number value expected, got \" + typeof value + \" with value: \" + value);\n  return name + '\\x3d\"' + goog.string.internal.htmlEscape(String(value)) + '\"';\n};\ngoog.html.SafeHtml.getStyleValue_ = function(value) {\n  if (!goog.isObject(value)) {\n    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'The \"style\" attribute requires goog.html.SafeStyle or map ' + \"of style properties, \" + typeof value + \" given: \" + value : \"\");\n  }\n  if (!(value instanceof goog.html.SafeStyle)) {\n    value = goog.html.SafeStyle.create(value);\n  }\n  return goog.html.SafeStyle.unwrap(value);\n};\ngoog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {\n  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);\n  html.dir_ = dir;\n  return html;\n};\ngoog.html.SafeHtml.join = function(separator, parts) {\n  var separatorHtml = goog.html.SafeHtml.htmlEscape(separator);\n  var dir = separatorHtml.getDirection();\n  var content = [];\n  var addArgument = function(argument) {\n    if (Array.isArray(argument)) {\n      goog.array.forEach(argument, addArgument);\n    } else {\n      var html = goog.html.SafeHtml.htmlEscape(argument);\n      content.push(goog.html.SafeHtml.unwrap(html));\n      var htmlDir = html.getDirection();\n      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {\n        dir = htmlDir;\n      } else {\n        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {\n          dir = null;\n        }\n      }\n    }\n  };\n  goog.array.forEach(parts, addArgument);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content.join(goog.html.SafeHtml.unwrap(separatorHtml)), dir);\n};\ngoog.html.SafeHtml.concat = function(var_args) {\n  return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));\n};\ngoog.html.SafeHtml.concatWithDir = function(dir, var_args) {\n  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));\n  html.dir_ = dir;\n  return html;\n};\ngoog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_ = {};\ngoog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {\n  const policy = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n  const trustedHtml = policy ? policy.createHTML(html) : html;\n  return new goog.html.SafeHtml(trustedHtml, dir, goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\ngoog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {\n  var dir = null;\n  var result = \"\\x3c\" + tagName;\n  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);\n  var content = opt_content;\n  if (content == null) {\n    content = [];\n  } else {\n    if (!Array.isArray(content)) {\n      content = [content];\n    }\n  }\n  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {\n    goog.asserts.assert(!content.length, \"Void tag \\x3c\" + tagName + \"\\x3e does not allow content.\");\n    result += \"\\x3e\";\n  } else {\n    var html = goog.html.SafeHtml.concat(content);\n    result += \"\\x3e\" + goog.html.SafeHtml.unwrap(html) + \"\\x3c/\" + tagName + \"\\x3e\";\n    dir = html.getDirection();\n  }\n  var dirAttribute = opt_attributes && opt_attributes[\"dir\"];\n  if (dirAttribute) {\n    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {\n      dir = goog.i18n.bidi.Dir.NEUTRAL;\n    } else {\n      dir = null;\n    }\n  }\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);\n};\ngoog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {\n  var result = \"\";\n  if (opt_attributes) {\n    for (var name in opt_attributes) {\n      if (Object.prototype.hasOwnProperty.call(opt_attributes, name)) {\n        if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {\n          throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name \"' + name + '\".' : \"\");\n        }\n        var value = opt_attributes[name];\n        if (value == null) {\n          continue;\n        }\n        result += \" \" + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);\n      }\n    }\n  }\n  return result;\n};\ngoog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {\n  var combinedAttributes = {};\n  var name;\n  for (name in fixedAttributes) {\n    if (Object.prototype.hasOwnProperty.call(fixedAttributes, name)) {\n      goog.asserts.assert(name.toLowerCase() == name, \"Must be lower case\");\n      combinedAttributes[name] = fixedAttributes[name];\n    }\n  }\n  for (name in defaultAttributes) {\n    if (Object.prototype.hasOwnProperty.call(defaultAttributes, name)) {\n      goog.asserts.assert(name.toLowerCase() == name, \"Must be lower case\");\n      combinedAttributes[name] = defaultAttributes[name];\n    }\n  }\n  if (opt_attributes) {\n    for (name in opt_attributes) {\n      if (Object.prototype.hasOwnProperty.call(opt_attributes, name)) {\n        var nameLower = name.toLowerCase();\n        if (nameLower in fixedAttributes) {\n          throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override \"' + nameLower + '\" attribute, got \"' + name + '\" with value \"' + opt_attributes[name] + '\"' : \"\");\n        }\n        if (nameLower in defaultAttributes) {\n          delete combinedAttributes[nameLower];\n        }\n        combinedAttributes[name] = opt_attributes[name];\n      }\n    }\n  }\n  return combinedAttributes;\n};\ngoog.html.SafeHtml.DOCTYPE_HTML = {valueOf:function() {\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"\\x3c!DOCTYPE html\\x3e\", goog.i18n.bidi.Dir.NEUTRAL);\n}, }.valueOf();\ngoog.html.SafeHtml.EMPTY = new goog.html.SafeHtml(goog.global.trustedTypes && goog.global.trustedTypes.emptyHTML || \"\", goog.i18n.bidi.Dir.NEUTRAL, goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_);\ngoog.html.SafeHtml.BR = {valueOf:function() {\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\"\\x3cbr\\x3e\", goog.i18n.bidi.Dir.NEUTRAL);\n}, }.valueOf();\n","~:source","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview The SafeHtml type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.SafeHtml');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.tags');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.html.trustedtypes');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.object');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\ngoog.require('goog.string.internal');\n\n\n\n/**\n * A string that is safe to use in HTML context in DOM APIs and HTML documents.\n *\n * A SafeHtml is a string-like object that carries the security type contract\n * that its value as a string will not cause untrusted script execution when\n * evaluated as HTML in a browser.\n *\n * Values of this type are guaranteed to be safe to use in HTML contexts,\n * such as, assignment to the innerHTML DOM property, or interpolation into\n * a HTML template in HTML PC_DATA context, in the sense that the use will not\n * result in a Cross-Site-Scripting vulnerability.\n *\n * Instances of this type must be created via the factory methods\n * (`goog.html.SafeHtml.create`, `goog.html.SafeHtml.htmlEscape`),\n * etc and not by invoking its constructor. The constructor intentionally takes\n * an extra parameter that cannot be constructed outside of this file and the\n * type is immutable; hence only a default instance corresponding to the empty\n * string can be obtained via constructor invocation.\n *\n * Creating SafeHtml objects HAS SIDE-EFFECTS due to calling Trusted Types Web\n * API.\n *\n * Note that there is no `goog.html.SafeHtml.fromConstant`. The reason is that\n * the following code would create an unsafe HTML:\n *\n * ```\n * goog.html.SafeHtml.concat(\n *     goog.html.SafeHtml.fromConstant(goog.string.Const.from('<script>')),\n *     goog.html.SafeHtml.htmlEscape(userInput),\n *     goog.html.SafeHtml.fromConstant(goog.string.Const.from('<\\/script>')));\n * ```\n *\n * There's `goog.dom.constHtmlToNode` to create a node from constant strings\n * only.\n *\n * @see goog.html.SafeHtml.create\n * @see goog.html.SafeHtml.htmlEscape\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n */\ngoog.html.SafeHtml = class {\n  /**\n   * @param {!TrustedHTML|string} value\n   * @param {?goog.i18n.bidi.Dir} dir\n   * @param {!Object} token package-internal implementation detail.\n   */\n  constructor(value, dir, token) {\n    /**\n     * The contained value of this SafeHtml.  The field has a purposely ugly\n     * name to make (non-compiled) code that attempts to directly access this\n     * field stand out.\n     * @private {!TrustedHTML|string}\n     */\n    this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ =\n        (token === goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_) ? value : '';\n\n    /**\n     * This SafeHtml's directionality, or null if unknown.\n     * @private {?goog.i18n.bidi.Dir}\n     */\n    this.dir_ = dir;\n  }\n};\n\n\n/**\n * @define {boolean} Whether to strip out error messages or to leave them in.\n */\ngoog.html.SafeHtml.ENABLE_ERROR_MESSAGES =\n    goog.define('goog.html.SafeHtml.ENABLE_ERROR_MESSAGES', goog.DEBUG);\n\n\n/**\n * Whether the `style` attribute is supported. Set to false to avoid the byte\n * weight of `goog.html.SafeStyle` where unneeded. An error will be thrown if\n * the `style` attribute is used.\n * @define {boolean}\n */\ngoog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE =\n    goog.define('goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE', true);\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;\n\n\n/** @override */\ngoog.html.SafeHtml.prototype.getDirection = function() {\n  'use strict';\n  return this.dir_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this SafeHtml's value as string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `SafeHtml`, use `goog.html.SafeHtml.unwrap` instead of\n * this method. If in doubt, assume that it's security relevant. In particular,\n * note that goog.html functions which return a goog.html type do not guarantee\n * that the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml\n * // instanceof goog.html.SafeHtml.\n * </pre>\n *\n * @see goog.html.SafeHtml.unwrap\n * @override\n */\ngoog.html.SafeHtml.prototype.getTypedStringValue = function() {\n  'use strict';\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a SafeHtml, use\n   * `goog.html.SafeHtml.unwrap`.\n   *\n   * @see goog.html.SafeHtml.unwrap\n   * @override\n   */\n  goog.html.SafeHtml.prototype.toString = function() {\n    'use strict';\n    return 'SafeHtml{' + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ +\n        '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a SafeHtml\n * object, and returns its value.\n * @param {!goog.html.SafeHtml} safeHtml The object to extract from.\n * @return {string} The SafeHtml object's contained string, unless the run-time\n *     type check fails. In that case, `unwrap` returns an innocuous\n *     string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.SafeHtml.unwrap = function(safeHtml) {\n  'use strict';\n  return goog.html.SafeHtml.unwrapTrustedHTML(safeHtml).toString();\n};\n\n\n/**\n * Unwraps value as TrustedHTML if supported or as a string if not.\n * @param {!goog.html.SafeHtml} safeHtml\n * @return {!TrustedHTML|string}\n * @see goog.html.SafeHtml.unwrap\n */\ngoog.html.SafeHtml.unwrapTrustedHTML = function(safeHtml) {\n  'use strict';\n  // Perform additional run-time type-checking to ensure that safeHtml is indeed\n  // an instance of the expected type.  This provides some additional protection\n  // against security bugs due to application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  if (safeHtml instanceof goog.html.SafeHtml &&\n      safeHtml.constructor === goog.html.SafeHtml) {\n    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n  } else {\n    goog.asserts.fail(\n        'expected object of type SafeHtml, got \\'' + safeHtml + '\\' of type ' +\n        goog.typeOf(safeHtml));\n    return 'type_error:SafeHtml';\n  }\n};\n\n\n/**\n * Shorthand for union of types that can sensibly be converted to strings\n * or might already be SafeHtml (as SafeHtml is a goog.string.TypedString).\n * @private\n * @typedef {string|number|boolean|!goog.string.TypedString|\n *           !goog.i18n.bidi.DirectionalString}\n */\ngoog.html.SafeHtml.TextOrHtml_;\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object.\n *\n * If text is of a type that implements\n * `goog.i18n.bidi.DirectionalString`, the directionality of the new\n * `SafeHtml` object is set to `text`'s directionality, if known.\n * Otherwise, the directionality of the resulting SafeHtml is unknown (i.e.,\n * `null`).\n *\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscape = function(textOrHtml) {\n  'use strict';\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var textIsObject = typeof textOrHtml == 'object';\n  var dir = null;\n  if (textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString) {\n    dir = /** @type {!goog.i18n.bidi.DirectionalString} */ (textOrHtml)\n              .getDirection();\n  }\n  var textAsString;\n  if (textIsObject && textOrHtml.implementsGoogStringTypedString) {\n    textAsString = /** @type {!goog.string.TypedString} */ (textOrHtml)\n                       .getTypedStringValue();\n  } else {\n    textAsString = String(textOrHtml);\n  }\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.internal.htmlEscape(textAsString), dir);\n};\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n * &lt;br&gt;.\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {\n  'use strict';\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(html)),\n      html.getDirection());\n};\n\n\n/**\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\n * &lt;br&gt; and escaping whitespace to preserve spatial formatting. Character\n * entity #160 is used to make it safer for XML.\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\n *     the parameter is of type SafeHtml it is returned directly (no escaping\n *     is done).\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\n */\ngoog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(\n    textOrHtml) {\n  'use strict';\n  if (textOrHtml instanceof goog.html.SafeHtml) {\n    return textOrHtml;\n  }\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(html)),\n      html.getDirection());\n};\n\n\n/**\n * Coerces an arbitrary object into a SafeHtml object.\n *\n * If `textOrHtml` is already of type `goog.html.SafeHtml`, the same\n * object is returned. Otherwise, `textOrHtml` is coerced to string, and\n * HTML-escaped. If `textOrHtml` is of a type that implements\n * `goog.i18n.bidi.DirectionalString`, its directionality, if known, is\n * preserved.\n *\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text or SafeHtml to\n *     coerce.\n * @return {!goog.html.SafeHtml} The resulting SafeHtml object.\n * @deprecated Use goog.html.SafeHtml.htmlEscape.\n */\ngoog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;\n\n\n/**\n * Converts an arbitrary string into an HTML comment by HTML-escaping the\n * contents and embedding the result between HTML comment markers.\n *\n * Escaping is needed because Internet Explorer supports conditional comments\n * and so may render HTML markup within comments.\n *\n * @param {string} text\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.comment = function(text) {\n  'use strict';\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      '<!--' + goog.string.internal.htmlEscape(text) + '-->', null);\n};\n\n\n/**\n * @const\n * @private\n */\ngoog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;\n\n\n/**\n * Set of attributes containing URL as defined at\n * http://www.w3.org/TR/html5/index.html#attributes-1.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet(\n    'action', 'cite', 'data', 'formaction', 'href', 'manifest', 'poster',\n    'src');\n\n\n/**\n * Tags which are unsupported via create(). They might be supported via a\n * tag-specific create method. These are tags which might require a\n * TrustedResourceUrl in one of their attributes or a restricted type for\n * their content.\n * @private @const {!Object<string,boolean>}\n */\ngoog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(\n    goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED,\n    goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH,\n    goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT,\n    goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);\n\n\n/**\n * @typedef {string|number|!goog.string.TypedString|\n *     !goog.html.SafeStyle.PropertyMap|undefined|null}\n */\ngoog.html.SafeHtml.AttributeValue;\n\n\n/**\n * Creates a SafeHtml content consisting of a tag with optional attributes and\n * optional content.\n *\n * For convenience tag names and attribute names are accepted as regular\n * strings, instead of goog.string.Const. Nevertheless, you should not pass\n * user-controlled values to these parameters. Note that these parameters are\n * syntactically validated at runtime, and invalid values will result in\n * an exception.\n *\n * Example usage:\n *\n * goog.html.SafeHtml.create('br');\n * goog.html.SafeHtml.create('div', {'class': 'a'});\n * goog.html.SafeHtml.create('p', {}, 'a');\n * goog.html.SafeHtml.create('p', {}, goog.html.SafeHtml.create('br'));\n *\n * goog.html.SafeHtml.create('span', {\n *   'style': {'margin': '0'}\n * });\n *\n * To guarantee SafeHtml's type contract is upheld there are restrictions on\n * attribute values and tag names.\n *\n * - For attributes which contain script code (on*), a goog.string.Const is\n *   required.\n * - For attributes which contain style (style), a goog.html.SafeStyle or a\n *   goog.html.SafeStyle.PropertyMap is required.\n * - For attributes which are interpreted as URLs (e.g. src, href) a\n *   goog.html.SafeUrl, goog.string.Const or string is required. If a string\n *   is passed, it will be sanitized with SafeUrl.sanitize().\n * - For tags which can load code or set security relevant page metadata,\n *   more specific goog.html.SafeHtml.create*() functions must be used. Tags\n *   which are not supported by this function are applet, base, embed, iframe,\n *   link, math, meta, object, script, style, svg, and template.\n *\n * @param {!goog.dom.TagName|string} tagName The name of the tag. Only tag names\n *     consisting of [a-zA-Z0-9-] are allowed. Tag names documented above are\n *     disallowed.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. This must be empty for void tags\n *     like <br>. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {!Error} If invalid tag name, attribute name, or attribute value is\n *     provided.\n * @throws {!goog.asserts.AssertionError} If content for void tag is provided.\n */\ngoog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {\n  'use strict';\n  goog.html.SafeHtml.verifyTagName(String(tagName));\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      String(tagName), opt_attributes, opt_content);\n};\n\n\n/**\n * Verifies if the tag name is valid and if it doesn't change the context.\n * E.g. STRONG is fine but SCRIPT throws because it changes context. See\n * goog.html.SafeHtml.create for an explanation of allowed tags.\n * @param {string} tagName\n * @throws {!Error} If invalid tag name is provided.\n * @package\n */\ngoog.html.SafeHtml.verifyTagName = function(tagName) {\n  'use strict';\n  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n            'Invalid tag name <' + tagName + '>.' :\n            '');\n  }\n  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n\n            'Tag name <' + tagName + '> is not allowed for SafeHtml.' :\n            '');\n  }\n};\n\n\n/**\n * Creates a SafeHtml representing an iframe tag.\n *\n * This by default restricts the iframe as much as possible by setting the\n * sandbox attribute to the empty string. If the iframe requires less\n * restrictions, set the sandbox attribute as tight as possible, but do not rely\n * on the sandbox as a security feature because it is not supported by older\n * browsers. If a sandbox is essential to security (e.g. for third-party\n * frames), use createSandboxIframe which checks for browser support.\n *\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n *\n * @param {?goog.html.TrustedResourceUrl=} opt_src The value of the src\n *     attribute. If null or undefined src will not be set.\n * @param {?goog.html.SafeHtml=} opt_srcdoc The value of the srcdoc attribute.\n *     If null or undefined srcdoc will not be set.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {!Error} If invalid tag name, attribute name, or attribute value is\n *     provided. If opt_attributes contains the src or srcdoc attributes.\n */\ngoog.html.SafeHtml.createIframe = function(\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  'use strict';\n  if (opt_src) {\n    // Check whether this is really TrustedResourceUrl.\n    goog.html.TrustedResourceUrl.unwrap(opt_src);\n  }\n\n  var fixedAttributes = {};\n  fixedAttributes['src'] = opt_src || null;\n  fixedAttributes['srcdoc'] =\n      opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);\n  var defaultAttributes = {'sandbox': ''};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'iframe', attributes, opt_content);\n};\n\n\n/**\n * Creates a SafeHtml representing a sandboxed iframe tag.\n *\n * The sandbox attribute is enforced in its most restrictive mode, an empty\n * string. Consequently, the security requirements for the src and srcdoc\n * attributes are relaxed compared to SafeHtml.createIframe. This function\n * will throw on browsers that do not support the sandbox attribute, as\n * determined by SafeHtml.canUseSandboxIframe.\n *\n * The SafeHtml returned by this function can trigger downloads with no\n * user interaction on Chrome (though only a few, further attempts are blocked).\n * Firefox and IE will block all downloads from the sandbox.\n *\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\n * @see https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Feb/0112.html\n *\n * @param {string|!goog.html.SafeUrl=} opt_src The value of the src\n *     attribute. If null or undefined src will not be set.\n * @param {string=} opt_srcdoc The value of the srcdoc attribute.\n *     If null or undefined srcdoc will not be set. Will not be sanitized.\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\n *     HTML-escape and put inside the tag. Array elements are concatenated.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {!Error} If invalid tag name, attribute name, or attribute value is\n *     provided. If opt_attributes contains the src, srcdoc or sandbox\n *     attributes. If browser does not support the sandbox attribute on iframe.\n */\ngoog.html.SafeHtml.createSandboxIframe = function(\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\n  'use strict';\n  if (!goog.html.SafeHtml.canUseSandboxIframe()) {\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n            'The browser does not support sandboxed iframes.' :\n            '');\n  }\n\n  var fixedAttributes = {};\n  if (opt_src) {\n    // Note that sanitize is a no-op on SafeUrl.\n    fixedAttributes['src'] =\n        goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));\n  } else {\n    fixedAttributes['src'] = null;\n  }\n  fixedAttributes['srcdoc'] = opt_srcdoc || null;\n  fixedAttributes['sandbox'] = '';\n  var attributes =\n      goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'iframe', attributes, opt_content);\n};\n\n\n/**\n * Checks if the user agent supports sandboxed iframes.\n * @return {boolean}\n */\ngoog.html.SafeHtml.canUseSandboxIframe = function() {\n  'use strict';\n  return goog.global['HTMLIFrameElement'] &&\n      ('sandbox' in goog.global['HTMLIFrameElement'].prototype);\n};\n\n\n/**\n * Creates a SafeHtml representing a script tag with the src attribute.\n * @param {!goog.html.TrustedResourceUrl} src The value of the src\n * attribute.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=}\n * opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined\n *     causes the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {!Error} If invalid attribute name or value is provided. If\n *     opt_attributes contains the src attribute.\n */\ngoog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {\n  'use strict';\n  // TODO(mlourenco): The charset attribute should probably be blocked. If\n  // its value is attacker controlled, the script contains attacker controlled\n  // sub-strings (even if properly escaped) and the server does not set charset\n  // then XSS is likely possible.\n  // https://html.spec.whatwg.org/multipage/scripting.html#dom-script-charset\n\n  // Check whether this is really TrustedResourceUrl.\n  goog.html.TrustedResourceUrl.unwrap(src);\n\n  var fixedAttributes = {'src': src};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'script', attributes);\n};\n\n\n/**\n * Creates a SafeHtml representing a script tag. Does not allow the language,\n * src, text or type attributes to be set.\n * @param {!goog.html.SafeScript|!Array<!goog.html.SafeScript>}\n *     script Content to put inside the tag. Array elements are\n *     concatenated.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {!Error} If invalid attribute name or attribute value is provided. If\n *     opt_attributes contains the language, src, text or type attribute.\n */\ngoog.html.SafeHtml.createScript = function(script, opt_attributes) {\n  'use strict';\n  for (var attr in opt_attributes) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\n    if (Object.prototype.hasOwnProperty.call(opt_attributes, attr)) {\n      var attrLower = attr.toLowerCase();\n      if (attrLower == 'language' || attrLower == 'src' ||\n          attrLower == 'text' || attrLower == 'type') {\n        throw new Error(\n            goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n                'Cannot set \"' + attrLower + '\" attribute' :\n                '');\n      }\n    }\n  }\n\n  var content = '';\n  script = goog.array.concat(script);\n  for (var i = 0; i < script.length; i++) {\n    content += goog.html.SafeScript.unwrap(script[i]);\n  }\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n  // as part of its contract, SafeScript should have no dangerous '<'.\n  var htmlContent =\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n          content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'script', opt_attributes, htmlContent);\n};\n\n\n/**\n * Creates a SafeHtml representing a style tag. The type attribute is set\n * to \"text/css\".\n * @param {!goog.html.SafeStyleSheet|!Array<!goog.html.SafeStyleSheet>}\n *     styleSheet Content to put inside the tag. Array elements are\n *     concatenated.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Mapping from attribute names to their values. Only attribute names\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\n *     the attribute to be omitted.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n * @throws {!Error} If invalid attribute name or attribute value is provided. If\n *     opt_attributes contains the type attribute.\n */\ngoog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {\n  'use strict';\n  var fixedAttributes = {'type': 'text/css'};\n  var defaultAttributes = {};\n  var attributes = goog.html.SafeHtml.combineAttributes(\n      fixedAttributes, defaultAttributes, opt_attributes);\n\n  var content = '';\n  styleSheet = goog.array.concat(styleSheet);\n  for (var i = 0; i < styleSheet.length; i++) {\n    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);\n  }\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\n  // as part of its contract, SafeStyleSheet should have no dangerous '<'.\n  var htmlContent =\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n          content, goog.i18n.bidi.Dir.NEUTRAL);\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'style', attributes, htmlContent);\n};\n\n\n/**\n * Creates a SafeHtml representing a meta refresh tag.\n * @param {!goog.html.SafeUrl|string} url Where to redirect. If a string is\n *     passed, it will be sanitized with SafeUrl.sanitize().\n * @param {number=} opt_secs Number of seconds until the page should be\n *     reloaded. Will be set to 0 if unspecified.\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n */\ngoog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {\n  'use strict';\n  // Note that sanitize is a no-op on SafeUrl.\n  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\n\n  if (goog.labs.userAgent.browser.isIE() ||\n      goog.labs.userAgent.browser.isEdge()) {\n    // IE/EDGE can't parse the content attribute if the url contains a\n    // semicolon. We can fix this by adding quotes around the url, but then we\n    // can't parse quotes in the URL correctly. Also, it seems that IE/EDGE\n    // did not unescape semicolons in these URLs at some point in the past. We\n    // take a best-effort approach.\n    //\n    // If the URL has semicolons (which may happen in some cases, see\n    // http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2\n    // for instance), wrap it in single quotes to protect the semicolons.\n    // If the URL has semicolons and single quotes, url-encode the single quotes\n    // as well.\n    //\n    // This is imperfect. Notice that both ' and ; are reserved characters in\n    // URIs, so this could do the wrong thing, but at least it will do the wrong\n    // thing in only rare cases.\n    if (goog.string.internal.contains(unwrappedUrl, ';')) {\n      unwrappedUrl = '\\'' + unwrappedUrl.replace(/'/g, '%27') + '\\'';\n    }\n  }\n  var attributes = {\n    'http-equiv': 'refresh',\n    'content': (opt_secs || 0) + '; url=' + unwrappedUrl\n  };\n\n  // This function will handle the HTML escaping for attributes.\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\n      'meta', attributes);\n};\n\n\n/**\n * @param {string} tagName The tag name.\n * @param {string} name The attribute name.\n * @param {!goog.html.SafeHtml.AttributeValue} value The attribute value.\n * @return {string} A \"name=value\" string.\n * @throws {!Error} If attribute value is unsafe for the given tag and\n *     attribute.\n * @private\n */\ngoog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {\n  'use strict';\n  // If it's goog.string.Const, allow any valid attribute name.\n  if (value instanceof goog.string.Const) {\n    value = goog.string.Const.unwrap(value);\n  } else if (name.toLowerCase() == 'style') {\n    if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {\n      value = goog.html.SafeHtml.getStyleValue_(value);\n    } else {\n      throw new Error(\n          goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n              'Attribute \"style\" not supported.' :\n              '');\n    }\n  } else if (/^on/i.test(name)) {\n    // TODO(jakubvrana): Disallow more attributes with a special meaning.\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \"' + name +\n                '\" requires goog.string.Const value, \"' + value + '\" given.' :\n                                                   '');\n    // URL attributes handled differently according to tag.\n  } else if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {\n    if (value instanceof goog.html.TrustedResourceUrl) {\n      value = goog.html.TrustedResourceUrl.unwrap(value);\n    } else if (value instanceof goog.html.SafeUrl) {\n      value = goog.html.SafeUrl.unwrap(value);\n    } else if (typeof value === 'string') {\n      value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();\n    } else {\n      throw new Error(\n          goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n              'Attribute \"' + name + '\" on tag \"' + tagName +\n                  '\" requires goog.html.SafeUrl, goog.string.Const, or' +\n                  ' string, value \"' + value + '\" given.' :\n              '');\n    }\n  }\n\n  // Accept SafeUrl, TrustedResourceUrl, etc. for attributes which only require\n  // HTML-escaping.\n  if (value.implementsGoogStringTypedString) {\n    // Ok to call getTypedStringValue() since there's no reliance on the type\n    // contract for security here.\n    value =\n        /** @type {!goog.string.TypedString} */ (value).getTypedStringValue();\n  }\n\n  goog.asserts.assert(\n      typeof value === 'string' || typeof value === 'number',\n      'String or number value expected, got ' + (typeof value) +\n          ' with value: ' + value);\n  return name + '=\"' + goog.string.internal.htmlEscape(String(value)) + '\"';\n};\n\n\n/**\n * Gets value allowed in \"style\" attribute.\n * @param {!goog.html.SafeHtml.AttributeValue} value It could be SafeStyle or a\n *     map which will be passed to goog.html.SafeStyle.create.\n * @return {string} Unwrapped value.\n * @throws {!Error} If string value is given.\n * @private\n */\ngoog.html.SafeHtml.getStyleValue_ = function(value) {\n  'use strict';\n  if (!goog.isObject(value)) {\n    throw new Error(\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n            'The \"style\" attribute requires goog.html.SafeStyle or map ' +\n                'of style properties, ' + (typeof value) + ' given: ' + value :\n            '');\n  }\n  if (!(value instanceof goog.html.SafeStyle)) {\n    // Process the property bag into a style object.\n    value = goog.html.SafeStyle.create(value);\n  }\n  return goog.html.SafeStyle.unwrap(value);\n};\n\n\n/**\n * Creates a SafeHtml content with known directionality consisting of a tag with\n * optional attributes and optional content.\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\n * @param {string} tagName\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @param {!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\n */\ngoog.html.SafeHtml.createWithDir = function(\n    dir, tagName, opt_attributes, opt_content) {\n  'use strict';\n  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);\n  html.dir_ = dir;\n  return html;\n};\n\n\n/**\n * Creates a new SafeHtml object by joining the parts with separator.\n * @param {!goog.html.SafeHtml.TextOrHtml_} separator\n * @param {!Array<!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>>} parts Parts to join. If a part\n *     contains an array then each member of this array is also joined with the\n *     separator.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.join = function(separator, parts) {\n  'use strict';\n  var separatorHtml = goog.html.SafeHtml.htmlEscape(separator);\n  var dir = separatorHtml.getDirection();\n  var content = [];\n\n  /**\n   * @param {!goog.html.SafeHtml.TextOrHtml_|\n   *     !Array<!goog.html.SafeHtml.TextOrHtml_>} argument\n   */\n  var addArgument = function(argument) {\n    'use strict';\n    if (Array.isArray(argument)) {\n      goog.array.forEach(argument, addArgument);\n    } else {\n      var html = goog.html.SafeHtml.htmlEscape(argument);\n      content.push(goog.html.SafeHtml.unwrap(html));\n      var htmlDir = html.getDirection();\n      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {\n        dir = htmlDir;\n      } else if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {\n        dir = null;\n      }\n    }\n  };\n\n  goog.array.forEach(parts, addArgument);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      content.join(goog.html.SafeHtml.unwrap(separatorHtml)), dir);\n};\n\n\n/**\n * Creates a new SafeHtml object by concatenating values.\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Values to concatenate.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.concat = function(var_args) {\n  'use strict';\n  return goog.html.SafeHtml.join(\n      goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));\n};\n\n\n/**\n * Creates a new SafeHtml object with known directionality by concatenating the\n * values.\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Elements of array\n *     arguments would be processed recursively.\n * @return {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.concatWithDir = function(dir, var_args) {\n  'use strict';\n  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));\n  html.dir_ = dir;\n  return html;\n};\n\n\n/**\n * Token used to ensure that object is created only from this file. No code\n * outside of this file can access this token.\n * @private {!Object}\n * @const\n */\ngoog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create SafeHtml instances.\n *\n * @param {string} html The string to initialize the SafeHtml object with.\n * @param {?goog.i18n.bidi.Dir} dir The directionality of the SafeHtml to be\n *     constructed, or null if unknown.\n * @return {!goog.html.SafeHtml} The initialized SafeHtml object.\n * @package\n */\ngoog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(\n    html, dir) {\n  'use strict';\n  const policy = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n  const trustedHtml = policy ? policy.createHTML(html) : html;\n  return new goog.html.SafeHtml(\n      trustedHtml, dir, goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\n\n\n/**\n * Like create() but does not restrict which tags can be constructed.\n *\n * @param {string} tagName Tag name. Set or validated by caller.\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @param {(!goog.html.SafeHtml.TextOrHtml_|\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)=} opt_content\n * @return {!goog.html.SafeHtml}\n * @throws {!Error} If invalid or unsafe attribute name or value is provided.\n * @throws {!goog.asserts.AssertionError} If content for void tag is provided.\n * @package\n */\ngoog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(\n    tagName, opt_attributes, opt_content) {\n  'use strict';\n  var dir = null;\n  var result = '<' + tagName;\n  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);\n\n  var content = opt_content;\n  if (content == null) {\n    content = [];\n  } else if (!Array.isArray(content)) {\n    content = [content];\n  }\n\n  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {\n    goog.asserts.assert(\n        !content.length, 'Void tag <' + tagName + '> does not allow content.');\n    result += '>';\n  } else {\n    var html = goog.html.SafeHtml.concat(content);\n    result += '>' + goog.html.SafeHtml.unwrap(html) + '</' + tagName + '>';\n    dir = html.getDirection();\n  }\n\n  var dirAttribute = opt_attributes && opt_attributes['dir'];\n  if (dirAttribute) {\n    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {\n      // If the tag has the \"dir\" attribute specified then its direction is\n      // neutral because it can be safely used in any context.\n      dir = goog.i18n.bidi.Dir.NEUTRAL;\n    } else {\n      dir = null;\n    }\n  }\n\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      result, dir);\n};\n\n\n/**\n * Creates a string with attributes to insert after tagName.\n * @param {string} tagName\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n * @return {string} Returns an empty string if there are no attributes, returns\n *     a string starting with a space otherwise.\n * @throws {!Error} If attribute value is unsafe for the given tag and\n *     attribute.\n * @package\n */\ngoog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {\n  'use strict';\n  var result = '';\n  if (opt_attributes) {\n    for (var name in opt_attributes) {\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\n      if (Object.prototype.hasOwnProperty.call(opt_attributes, name)) {\n        if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {\n          throw new Error(\n              goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n                  'Invalid attribute name \"' + name + '\".' :\n                  '');\n        }\n        var value = opt_attributes[name];\n        if (value == null) {\n          continue;\n        }\n        result +=\n            ' ' + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);\n      }\n    }\n  }\n  return result;\n};\n\n\n/**\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>} fixedAttributes\n * @param {!Object<string, string>} defaultAttributes\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\n *     Optional attributes passed to create*().\n * @return {!Object<string, ?goog.html.SafeHtml.AttributeValue>}\n * @throws {!Error} If opt_attributes contains an attribute with the same name\n *     as an attribute in fixedAttributes.\n * @package\n */\ngoog.html.SafeHtml.combineAttributes = function(\n    fixedAttributes, defaultAttributes, opt_attributes) {\n  'use strict';\n  var combinedAttributes = {};\n  var name;\n\n  for (name in fixedAttributes) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\n    if (Object.prototype.hasOwnProperty.call(fixedAttributes, name)) {\n      goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n      combinedAttributes[name] = fixedAttributes[name];\n    }\n  }\n  for (name in defaultAttributes) {\n    if (Object.prototype.hasOwnProperty.call(defaultAttributes, name)) {\n      goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\n      combinedAttributes[name] = defaultAttributes[name];\n    }\n  }\n\n  if (opt_attributes) {\n    for (name in opt_attributes) {\n      if (Object.prototype.hasOwnProperty.call(opt_attributes, name)) {\n        var nameLower = name.toLowerCase();\n        if (nameLower in fixedAttributes) {\n          throw new Error(\n              goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\n                  'Cannot override \"' + nameLower + '\" attribute, got \"' +\n                      name + '\" with value \"' + opt_attributes[name] + '\"' :\n                  '');\n        }\n        if (nameLower in defaultAttributes) {\n          delete combinedAttributes[nameLower];\n        }\n        combinedAttributes[name] = opt_attributes[name];\n      }\n    }\n  }\n\n  return combinedAttributes;\n};\n\n\n/**\n * A SafeHtml instance corresponding to the HTML doctype: \"<!DOCTYPE html>\".\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.DOCTYPE_HTML = /** @type {!goog.html.SafeHtml} */ ({\n  // NOTE: this compiles to nothing, but hides the possible side effect of\n  // SafeHtml creation (due to calling trustedTypes.createPolicy) from the\n  // compiler so that the entire call can be removed if the result is not used.\n  valueOf: function() {\n    'use strict';\n    return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<!DOCTYPE html>', goog.i18n.bidi.Dir.NEUTRAL);\n  },\n}.valueOf());\n\n/**\n * A SafeHtml instance corresponding to the empty string.\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.EMPTY = new goog.html.SafeHtml(\n    (goog.global.trustedTypes && goog.global.trustedTypes.emptyHTML) || '',\n    goog.i18n.bidi.Dir.NEUTRAL, goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_);\n\n/**\n * A SafeHtml instance corresponding to the <br> tag.\n * @const {!goog.html.SafeHtml}\n */\ngoog.html.SafeHtml.BR = /** @type {!goog.html.SafeHtml} */ ({\n  // NOTE: this compiles to nothing, but hides the possible side effect of\n  // SafeHtml creation (due to calling trustedTypes.createPolicy) from the\n  // compiler so that the entire call can be removed if the result is not used.\n  valueOf: function() {\n    'use strict';\n    return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n        '<br>', goog.i18n.bidi.Dir.NEUTRAL);\n  },\n}.valueOf());\n","~:compiled-at",1623605884883,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.html.safehtml.js\",\n\"lineCount\":353,\n\"mappings\":\"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\",\n\"sources\":[\"goog/html/safehtml.js\"],\n\"sourcesContent\":[\"/**\\n * @license\\n * Copyright The Closure Library Authors.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\n\\n/**\\n * @fileoverview The SafeHtml type and its builders.\\n *\\n * TODO(xtof): Link to document stating type contract.\\n */\\n\\ngoog.provide('goog.html.SafeHtml');\\n\\ngoog.require('goog.array');\\ngoog.require('goog.asserts');\\ngoog.require('goog.dom.TagName');\\ngoog.require('goog.dom.tags');\\ngoog.require('goog.html.SafeScript');\\ngoog.require('goog.html.SafeStyle');\\ngoog.require('goog.html.SafeStyleSheet');\\ngoog.require('goog.html.SafeUrl');\\ngoog.require('goog.html.TrustedResourceUrl');\\ngoog.require('goog.html.trustedtypes');\\ngoog.require('goog.i18n.bidi.Dir');\\ngoog.require('goog.i18n.bidi.DirectionalString');\\ngoog.require('goog.labs.userAgent.browser');\\ngoog.require('goog.object');\\ngoog.require('goog.string.Const');\\ngoog.require('goog.string.TypedString');\\ngoog.require('goog.string.internal');\\n\\n\\n\\n/**\\n * A string that is safe to use in HTML context in DOM APIs and HTML documents.\\n *\\n * A SafeHtml is a string-like object that carries the security type contract\\n * that its value as a string will not cause untrusted script execution when\\n * evaluated as HTML in a browser.\\n *\\n * Values of this type are guaranteed to be safe to use in HTML contexts,\\n * such as, assignment to the innerHTML DOM property, or interpolation into\\n * a HTML template in HTML PC_DATA context, in the sense that the use will not\\n * result in a Cross-Site-Scripting vulnerability.\\n *\\n * Instances of this type must be created via the factory methods\\n * (`goog.html.SafeHtml.create`, `goog.html.SafeHtml.htmlEscape`),\\n * etc and not by invoking its constructor. The constructor intentionally takes\\n * an extra parameter that cannot be constructed outside of this file and the\\n * type is immutable; hence only a default instance corresponding to the empty\\n * string can be obtained via constructor invocation.\\n *\\n * Creating SafeHtml objects HAS SIDE-EFFECTS due to calling Trusted Types Web\\n * API.\\n *\\n * Note that there is no `goog.html.SafeHtml.fromConstant`. The reason is that\\n * the following code would create an unsafe HTML:\\n *\\n * ```\\n * goog.html.SafeHtml.concat(\\n *     goog.html.SafeHtml.fromConstant(goog.string.Const.from('<script>')),\\n *     goog.html.SafeHtml.htmlEscape(userInput),\\n *     goog.html.SafeHtml.fromConstant(goog.string.Const.from('<\\\\/script>')));\\n * ```\\n *\\n * There's `goog.dom.constHtmlToNode` to create a node from constant strings\\n * only.\\n *\\n * @see goog.html.SafeHtml.create\\n * @see goog.html.SafeHtml.htmlEscape\\n * @final\\n * @struct\\n * @implements {goog.i18n.bidi.DirectionalString}\\n * @implements {goog.string.TypedString}\\n */\\ngoog.html.SafeHtml = class {\\n  /**\\n   * @param {!TrustedHTML|string} value\\n   * @param {?goog.i18n.bidi.Dir} dir\\n   * @param {!Object} token package-internal implementation detail.\\n   */\\n  constructor(value, dir, token) {\\n    /**\\n     * The contained value of this SafeHtml.  The field has a purposely ugly\\n     * name to make (non-compiled) code that attempts to directly access this\\n     * field stand out.\\n     * @private {!TrustedHTML|string}\\n     */\\n    this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ =\\n        (token === goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_) ? value : '';\\n\\n    /**\\n     * This SafeHtml's directionality, or null if unknown.\\n     * @private {?goog.i18n.bidi.Dir}\\n     */\\n    this.dir_ = dir;\\n  }\\n};\\n\\n\\n/**\\n * @define {boolean} Whether to strip out error messages or to leave them in.\\n */\\ngoog.html.SafeHtml.ENABLE_ERROR_MESSAGES =\\n    goog.define('goog.html.SafeHtml.ENABLE_ERROR_MESSAGES', goog.DEBUG);\\n\\n\\n/**\\n * Whether the `style` attribute is supported. Set to false to avoid the byte\\n * weight of `goog.html.SafeStyle` where unneeded. An error will be thrown if\\n * the `style` attribute is used.\\n * @define {boolean}\\n */\\ngoog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE =\\n    goog.define('goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE', true);\\n\\n\\n/**\\n * @override\\n * @const\\n */\\ngoog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;\\n\\n\\n/** @override */\\ngoog.html.SafeHtml.prototype.getDirection = function() {\\n  'use strict';\\n  return this.dir_;\\n};\\n\\n\\n/**\\n * @override\\n * @const\\n */\\ngoog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;\\n\\n\\n/**\\n * Returns this SafeHtml's value as string.\\n *\\n * IMPORTANT: In code where it is security relevant that an object's type is\\n * indeed `SafeHtml`, use `goog.html.SafeHtml.unwrap` instead of\\n * this method. If in doubt, assume that it's security relevant. In particular,\\n * note that goog.html functions which return a goog.html type do not guarantee\\n * that the returned instance is of the right type. For example:\\n *\\n * <pre>\\n * var fakeSafeHtml = new String('fake');\\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml\\n * // instanceof goog.html.SafeHtml.\\n * </pre>\\n *\\n * @see goog.html.SafeHtml.unwrap\\n * @override\\n */\\ngoog.html.SafeHtml.prototype.getTypedStringValue = function() {\\n  'use strict';\\n  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\\n};\\n\\n\\nif (goog.DEBUG) {\\n  /**\\n   * Returns a debug string-representation of this value.\\n   *\\n   * To obtain the actual string value wrapped in a SafeHtml, use\\n   * `goog.html.SafeHtml.unwrap`.\\n   *\\n   * @see goog.html.SafeHtml.unwrap\\n   * @override\\n   */\\n  goog.html.SafeHtml.prototype.toString = function() {\\n    'use strict';\\n    return 'SafeHtml{' + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ +\\n        '}';\\n  };\\n}\\n\\n\\n/**\\n * Performs a runtime check that the provided object is indeed a SafeHtml\\n * object, and returns its value.\\n * @param {!goog.html.SafeHtml} safeHtml The object to extract from.\\n * @return {string} The SafeHtml object's contained string, unless the run-time\\n *     type check fails. In that case, `unwrap` returns an innocuous\\n *     string, or, if assertions are enabled, throws\\n *     `goog.asserts.AssertionError`.\\n */\\ngoog.html.SafeHtml.unwrap = function(safeHtml) {\\n  'use strict';\\n  return goog.html.SafeHtml.unwrapTrustedHTML(safeHtml).toString();\\n};\\n\\n\\n/**\\n * Unwraps value as TrustedHTML if supported or as a string if not.\\n * @param {!goog.html.SafeHtml} safeHtml\\n * @return {!TrustedHTML|string}\\n * @see goog.html.SafeHtml.unwrap\\n */\\ngoog.html.SafeHtml.unwrapTrustedHTML = function(safeHtml) {\\n  'use strict';\\n  // Perform additional run-time type-checking to ensure that safeHtml is indeed\\n  // an instance of the expected type.  This provides some additional protection\\n  // against security bugs due to application code that disables type checks.\\n  // Specifically, the following checks are performed:\\n  // 1. The object is an instance of the expected type.\\n  // 2. The object is not an instance of a subclass.\\n  if (safeHtml instanceof goog.html.SafeHtml &&\\n      safeHtml.constructor === goog.html.SafeHtml) {\\n    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\\n  } else {\\n    goog.asserts.fail(\\n        'expected object of type SafeHtml, got \\\\'' + safeHtml + '\\\\' of type ' +\\n        goog.typeOf(safeHtml));\\n    return 'type_error:SafeHtml';\\n  }\\n};\\n\\n\\n/**\\n * Shorthand for union of types that can sensibly be converted to strings\\n * or might already be SafeHtml (as SafeHtml is a goog.string.TypedString).\\n * @private\\n * @typedef {string|number|boolean|!goog.string.TypedString|\\n *           !goog.i18n.bidi.DirectionalString}\\n */\\ngoog.html.SafeHtml.TextOrHtml_;\\n\\n\\n/**\\n * Returns HTML-escaped text as a SafeHtml object.\\n *\\n * If text is of a type that implements\\n * `goog.i18n.bidi.DirectionalString`, the directionality of the new\\n * `SafeHtml` object is set to `text`'s directionality, if known.\\n * Otherwise, the directionality of the resulting SafeHtml is unknown (i.e.,\\n * `null`).\\n *\\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\\n *     the parameter is of type SafeHtml it is returned directly (no escaping\\n *     is done).\\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\\n */\\ngoog.html.SafeHtml.htmlEscape = function(textOrHtml) {\\n  'use strict';\\n  if (textOrHtml instanceof goog.html.SafeHtml) {\\n    return textOrHtml;\\n  }\\n  var textIsObject = typeof textOrHtml == 'object';\\n  var dir = null;\\n  if (textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString) {\\n    dir = /** @type {!goog.i18n.bidi.DirectionalString} */ (textOrHtml)\\n              .getDirection();\\n  }\\n  var textAsString;\\n  if (textIsObject && textOrHtml.implementsGoogStringTypedString) {\\n    textAsString = /** @type {!goog.string.TypedString} */ (textOrHtml)\\n                       .getTypedStringValue();\\n  } else {\\n    textAsString = String(textOrHtml);\\n  }\\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n      goog.string.internal.htmlEscape(textAsString), dir);\\n};\\n\\n\\n/**\\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\\n * &lt;br&gt;.\\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\\n *     the parameter is of type SafeHtml it is returned directly (no escaping\\n *     is done).\\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\\n */\\ngoog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {\\n  'use strict';\\n  if (textOrHtml instanceof goog.html.SafeHtml) {\\n    return textOrHtml;\\n  }\\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n      goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(html)),\\n      html.getDirection());\\n};\\n\\n\\n/**\\n * Returns HTML-escaped text as a SafeHtml object, with newlines changed to\\n * &lt;br&gt; and escaping whitespace to preserve spatial formatting. Character\\n * entity #160 is used to make it safer for XML.\\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text to escape. If\\n *     the parameter is of type SafeHtml it is returned directly (no escaping\\n *     is done).\\n * @return {!goog.html.SafeHtml} The escaped text, wrapped as a SafeHtml.\\n */\\ngoog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(\\n    textOrHtml) {\\n  'use strict';\\n  if (textOrHtml instanceof goog.html.SafeHtml) {\\n    return textOrHtml;\\n  }\\n  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);\\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n      goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(html)),\\n      html.getDirection());\\n};\\n\\n\\n/**\\n * Coerces an arbitrary object into a SafeHtml object.\\n *\\n * If `textOrHtml` is already of type `goog.html.SafeHtml`, the same\\n * object is returned. Otherwise, `textOrHtml` is coerced to string, and\\n * HTML-escaped. If `textOrHtml` is of a type that implements\\n * `goog.i18n.bidi.DirectionalString`, its directionality, if known, is\\n * preserved.\\n *\\n * @param {!goog.html.SafeHtml.TextOrHtml_} textOrHtml The text or SafeHtml to\\n *     coerce.\\n * @return {!goog.html.SafeHtml} The resulting SafeHtml object.\\n * @deprecated Use goog.html.SafeHtml.htmlEscape.\\n */\\ngoog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;\\n\\n\\n/**\\n * Converts an arbitrary string into an HTML comment by HTML-escaping the\\n * contents and embedding the result between HTML comment markers.\\n *\\n * Escaping is needed because Internet Explorer supports conditional comments\\n * and so may render HTML markup within comments.\\n *\\n * @param {string} text\\n * @return {!goog.html.SafeHtml}\\n */\\ngoog.html.SafeHtml.comment = function(text) {\\n  'use strict';\\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n      '\\u003c!--' + goog.string.internal.htmlEscape(text) + '--\\u003e', null);\\n};\\n\\n\\n/**\\n * @const\\n * @private\\n */\\ngoog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;\\n\\n\\n/**\\n * Set of attributes containing URL as defined at\\n * http://www.w3.org/TR/html5/index.html#attributes-1.\\n * @private @const {!Object<string,boolean>}\\n */\\ngoog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet(\\n    'action', 'cite', 'data', 'formaction', 'href', 'manifest', 'poster',\\n    'src');\\n\\n\\n/**\\n * Tags which are unsupported via create(). They might be supported via a\\n * tag-specific create method. These are tags which might require a\\n * TrustedResourceUrl in one of their attributes or a restricted type for\\n * their content.\\n * @private @const {!Object<string,boolean>}\\n */\\ngoog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(\\n    goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED,\\n    goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH,\\n    goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT,\\n    goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);\\n\\n\\n/**\\n * @typedef {string|number|!goog.string.TypedString|\\n *     !goog.html.SafeStyle.PropertyMap|undefined|null}\\n */\\ngoog.html.SafeHtml.AttributeValue;\\n\\n\\n/**\\n * Creates a SafeHtml content consisting of a tag with optional attributes and\\n * optional content.\\n *\\n * For convenience tag names and attribute names are accepted as regular\\n * strings, instead of goog.string.Const. Nevertheless, you should not pass\\n * user-controlled values to these parameters. Note that these parameters are\\n * syntactically validated at runtime, and invalid values will result in\\n * an exception.\\n *\\n * Example usage:\\n *\\n * goog.html.SafeHtml.create('br');\\n * goog.html.SafeHtml.create('div', {'class': 'a'});\\n * goog.html.SafeHtml.create('p', {}, 'a');\\n * goog.html.SafeHtml.create('p', {}, goog.html.SafeHtml.create('br'));\\n *\\n * goog.html.SafeHtml.create('span', {\\n *   'style': {'margin': '0'}\\n * });\\n *\\n * To guarantee SafeHtml's type contract is upheld there are restrictions on\\n * attribute values and tag names.\\n *\\n * - For attributes which contain script code (on*), a goog.string.Const is\\n *   required.\\n * - For attributes which contain style (style), a goog.html.SafeStyle or a\\n *   goog.html.SafeStyle.PropertyMap is required.\\n * - For attributes which are interpreted as URLs (e.g. src, href) a\\n *   goog.html.SafeUrl, goog.string.Const or string is required. If a string\\n *   is passed, it will be sanitized with SafeUrl.sanitize().\\n * - For tags which can load code or set security relevant page metadata,\\n *   more specific goog.html.SafeHtml.create*() functions must be used. Tags\\n *   which are not supported by this function are applet, base, embed, iframe,\\n *   link, math, meta, object, script, style, svg, and template.\\n *\\n * @param {!goog.dom.TagName|string} tagName The name of the tag. Only tag names\\n *     consisting of [a-zA-Z0-9-] are allowed. Tag names documented above are\\n *     disallowed.\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n *     Mapping from attribute names to their values. Only attribute names\\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\\n *     the attribute to be omitted.\\n * @param {!goog.html.SafeHtml.TextOrHtml_|\\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\\n *     HTML-escape and put inside the tag. This must be empty for void tags\\n *     like <br>. Array elements are concatenated.\\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\\n * @throws {!Error} If invalid tag name, attribute name, or attribute value is\\n *     provided.\\n * @throws {!goog.asserts.AssertionError} If content for void tag is provided.\\n */\\ngoog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {\\n  'use strict';\\n  goog.html.SafeHtml.verifyTagName(String(tagName));\\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\\n      String(tagName), opt_attributes, opt_content);\\n};\\n\\n\\n/**\\n * Verifies if the tag name is valid and if it doesn't change the context.\\n * E.g. STRONG is fine but SCRIPT throws because it changes context. See\\n * goog.html.SafeHtml.create for an explanation of allowed tags.\\n * @param {string} tagName\\n * @throws {!Error} If invalid tag name is provided.\\n * @package\\n */\\ngoog.html.SafeHtml.verifyTagName = function(tagName) {\\n  'use strict';\\n  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {\\n    throw new Error(\\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n            'Invalid tag name <' + tagName + '>.' :\\n            '');\\n  }\\n  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {\\n    throw new Error(\\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n\\n            'Tag name <' + tagName + '> is not allowed for SafeHtml.' :\\n            '');\\n  }\\n};\\n\\n\\n/**\\n * Creates a SafeHtml representing an iframe tag.\\n *\\n * This by default restricts the iframe as much as possible by setting the\\n * sandbox attribute to the empty string. If the iframe requires less\\n * restrictions, set the sandbox attribute as tight as possible, but do not rely\\n * on the sandbox as a security feature because it is not supported by older\\n * browsers. If a sandbox is essential to security (e.g. for third-party\\n * frames), use createSandboxIframe which checks for browser support.\\n *\\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\\n *\\n * @param {?goog.html.TrustedResourceUrl=} opt_src The value of the src\\n *     attribute. If null or undefined src will not be set.\\n * @param {?goog.html.SafeHtml=} opt_srcdoc The value of the srcdoc attribute.\\n *     If null or undefined srcdoc will not be set.\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n *     Mapping from attribute names to their values. Only attribute names\\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\\n *     the attribute to be omitted.\\n * @param {!goog.html.SafeHtml.TextOrHtml_|\\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\\n *     HTML-escape and put inside the tag. Array elements are concatenated.\\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\\n * @throws {!Error} If invalid tag name, attribute name, or attribute value is\\n *     provided. If opt_attributes contains the src or srcdoc attributes.\\n */\\ngoog.html.SafeHtml.createIframe = function(\\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\\n  'use strict';\\n  if (opt_src) {\\n    // Check whether this is really TrustedResourceUrl.\\n    goog.html.TrustedResourceUrl.unwrap(opt_src);\\n  }\\n\\n  var fixedAttributes = {};\\n  fixedAttributes['src'] = opt_src || null;\\n  fixedAttributes['srcdoc'] =\\n      opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);\\n  var defaultAttributes = {'sandbox': ''};\\n  var attributes = goog.html.SafeHtml.combineAttributes(\\n      fixedAttributes, defaultAttributes, opt_attributes);\\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\\n      'iframe', attributes, opt_content);\\n};\\n\\n\\n/**\\n * Creates a SafeHtml representing a sandboxed iframe tag.\\n *\\n * The sandbox attribute is enforced in its most restrictive mode, an empty\\n * string. Consequently, the security requirements for the src and srcdoc\\n * attributes are relaxed compared to SafeHtml.createIframe. This function\\n * will throw on browsers that do not support the sandbox attribute, as\\n * determined by SafeHtml.canUseSandboxIframe.\\n *\\n * The SafeHtml returned by this function can trigger downloads with no\\n * user interaction on Chrome (though only a few, further attempts are blocked).\\n * Firefox and IE will block all downloads from the sandbox.\\n *\\n * @see https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#attr-sandbox\\n * @see https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Feb/0112.html\\n *\\n * @param {string|!goog.html.SafeUrl=} opt_src The value of the src\\n *     attribute. If null or undefined src will not be set.\\n * @param {string=} opt_srcdoc The value of the srcdoc attribute.\\n *     If null or undefined srcdoc will not be set. Will not be sanitized.\\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n *     Mapping from attribute names to their values. Only attribute names\\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\\n *     the attribute to be omitted.\\n * @param {!goog.html.SafeHtml.TextOrHtml_|\\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content Content to\\n *     HTML-escape and put inside the tag. Array elements are concatenated.\\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\\n * @throws {!Error} If invalid tag name, attribute name, or attribute value is\\n *     provided. If opt_attributes contains the src, srcdoc or sandbox\\n *     attributes. If browser does not support the sandbox attribute on iframe.\\n */\\ngoog.html.SafeHtml.createSandboxIframe = function(\\n    opt_src, opt_srcdoc, opt_attributes, opt_content) {\\n  'use strict';\\n  if (!goog.html.SafeHtml.canUseSandboxIframe()) {\\n    throw new Error(\\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n            'The browser does not support sandboxed iframes.' :\\n            '');\\n  }\\n\\n  var fixedAttributes = {};\\n  if (opt_src) {\\n    // Note that sanitize is a no-op on SafeUrl.\\n    fixedAttributes['src'] =\\n        goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));\\n  } else {\\n    fixedAttributes['src'] = null;\\n  }\\n  fixedAttributes['srcdoc'] = opt_srcdoc || null;\\n  fixedAttributes['sandbox'] = '';\\n  var attributes =\\n      goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);\\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\\n      'iframe', attributes, opt_content);\\n};\\n\\n\\n/**\\n * Checks if the user agent supports sandboxed iframes.\\n * @return {boolean}\\n */\\ngoog.html.SafeHtml.canUseSandboxIframe = function() {\\n  'use strict';\\n  return goog.global['HTMLIFrameElement'] &&\\n      ('sandbox' in goog.global['HTMLIFrameElement'].prototype);\\n};\\n\\n\\n/**\\n * Creates a SafeHtml representing a script tag with the src attribute.\\n * @param {!goog.html.TrustedResourceUrl} src The value of the src\\n * attribute.\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=}\\n * opt_attributes\\n *     Mapping from attribute names to their values. Only attribute names\\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined\\n *     causes the attribute to be omitted.\\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\\n * @throws {!Error} If invalid attribute name or value is provided. If\\n *     opt_attributes contains the src attribute.\\n */\\ngoog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {\\n  'use strict';\\n  // TODO(mlourenco): The charset attribute should probably be blocked. If\\n  // its value is attacker controlled, the script contains attacker controlled\\n  // sub-strings (even if properly escaped) and the server does not set charset\\n  // then XSS is likely possible.\\n  // https://html.spec.whatwg.org/multipage/scripting.html#dom-script-charset\\n\\n  // Check whether this is really TrustedResourceUrl.\\n  goog.html.TrustedResourceUrl.unwrap(src);\\n\\n  var fixedAttributes = {'src': src};\\n  var defaultAttributes = {};\\n  var attributes = goog.html.SafeHtml.combineAttributes(\\n      fixedAttributes, defaultAttributes, opt_attributes);\\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\\n      'script', attributes);\\n};\\n\\n\\n/**\\n * Creates a SafeHtml representing a script tag. Does not allow the language,\\n * src, text or type attributes to be set.\\n * @param {!goog.html.SafeScript|!Array<!goog.html.SafeScript>}\\n *     script Content to put inside the tag. Array elements are\\n *     concatenated.\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n *     Mapping from attribute names to their values. Only attribute names\\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\\n *     the attribute to be omitted.\\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\\n * @throws {!Error} If invalid attribute name or attribute value is provided. If\\n *     opt_attributes contains the language, src, text or type attribute.\\n */\\ngoog.html.SafeHtml.createScript = function(script, opt_attributes) {\\n  'use strict';\\n  for (var attr in opt_attributes) {\\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\\n    if (Object.prototype.hasOwnProperty.call(opt_attributes, attr)) {\\n      var attrLower = attr.toLowerCase();\\n      if (attrLower == 'language' || attrLower == 'src' ||\\n          attrLower == 'text' || attrLower == 'type') {\\n        throw new Error(\\n            goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n                'Cannot set \\\"' + attrLower + '\\\" attribute' :\\n                '');\\n      }\\n    }\\n  }\\n\\n  var content = '';\\n  script = goog.array.concat(script);\\n  for (var i = 0; i < script.length; i++) {\\n    content += goog.html.SafeScript.unwrap(script[i]);\\n  }\\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\\n  // as part of its contract, SafeScript should have no dangerous '<'.\\n  var htmlContent =\\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n          content, goog.i18n.bidi.Dir.NEUTRAL);\\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\\n      'script', opt_attributes, htmlContent);\\n};\\n\\n\\n/**\\n * Creates a SafeHtml representing a style tag. The type attribute is set\\n * to \\\"text/css\\\".\\n * @param {!goog.html.SafeStyleSheet|!Array<!goog.html.SafeStyleSheet>}\\n *     styleSheet Content to put inside the tag. Array elements are\\n *     concatenated.\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n *     Mapping from attribute names to their values. Only attribute names\\n *     consisting of [a-zA-Z0-9-] are allowed. Value of null or undefined causes\\n *     the attribute to be omitted.\\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\\n * @throws {!Error} If invalid attribute name or attribute value is provided. If\\n *     opt_attributes contains the type attribute.\\n */\\ngoog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {\\n  'use strict';\\n  var fixedAttributes = {'type': 'text/css'};\\n  var defaultAttributes = {};\\n  var attributes = goog.html.SafeHtml.combineAttributes(\\n      fixedAttributes, defaultAttributes, opt_attributes);\\n\\n  var content = '';\\n  styleSheet = goog.array.concat(styleSheet);\\n  for (var i = 0; i < styleSheet.length; i++) {\\n    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);\\n  }\\n  // Convert to SafeHtml so that it's not HTML-escaped. This is safe because\\n  // as part of its contract, SafeStyleSheet should have no dangerous '<'.\\n  var htmlContent =\\n      goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n          content, goog.i18n.bidi.Dir.NEUTRAL);\\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\\n      'style', attributes, htmlContent);\\n};\\n\\n\\n/**\\n * Creates a SafeHtml representing a meta refresh tag.\\n * @param {!goog.html.SafeUrl|string} url Where to redirect. If a string is\\n *     passed, it will be sanitized with SafeUrl.sanitize().\\n * @param {number=} opt_secs Number of seconds until the page should be\\n *     reloaded. Will be set to 0 if unspecified.\\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\\n */\\ngoog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {\\n  'use strict';\\n  // Note that sanitize is a no-op on SafeUrl.\\n  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));\\n\\n  if (goog.labs.userAgent.browser.isIE() ||\\n      goog.labs.userAgent.browser.isEdge()) {\\n    // IE/EDGE can't parse the content attribute if the url contains a\\n    // semicolon. We can fix this by adding quotes around the url, but then we\\n    // can't parse quotes in the URL correctly. Also, it seems that IE/EDGE\\n    // did not unescape semicolons in these URLs at some point in the past. We\\n    // take a best-effort approach.\\n    //\\n    // If the URL has semicolons (which may happen in some cases, see\\n    // http://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2\\n    // for instance), wrap it in single quotes to protect the semicolons.\\n    // If the URL has semicolons and single quotes, url-encode the single quotes\\n    // as well.\\n    //\\n    // This is imperfect. Notice that both ' and ; are reserved characters in\\n    // URIs, so this could do the wrong thing, but at least it will do the wrong\\n    // thing in only rare cases.\\n    if (goog.string.internal.contains(unwrappedUrl, ';')) {\\n      unwrappedUrl = '\\\\'' + unwrappedUrl.replace(/'/g, '%27') + '\\\\'';\\n    }\\n  }\\n  var attributes = {\\n    'http-equiv': 'refresh',\\n    'content': (opt_secs || 0) + '; url=' + unwrappedUrl\\n  };\\n\\n  // This function will handle the HTML escaping for attributes.\\n  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\\n      'meta', attributes);\\n};\\n\\n\\n/**\\n * @param {string} tagName The tag name.\\n * @param {string} name The attribute name.\\n * @param {!goog.html.SafeHtml.AttributeValue} value The attribute value.\\n * @return {string} A \\\"name=value\\\" string.\\n * @throws {!Error} If attribute value is unsafe for the given tag and\\n *     attribute.\\n * @private\\n */\\ngoog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {\\n  'use strict';\\n  // If it's goog.string.Const, allow any valid attribute name.\\n  if (value instanceof goog.string.Const) {\\n    value = goog.string.Const.unwrap(value);\\n  } else if (name.toLowerCase() == 'style') {\\n    if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {\\n      value = goog.html.SafeHtml.getStyleValue_(value);\\n    } else {\\n      throw new Error(\\n          goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n              'Attribute \\\"style\\\" not supported.' :\\n              '');\\n    }\\n  } else if (/^on/i.test(name)) {\\n    // TODO(jakubvrana): Disallow more attributes with a special meaning.\\n    throw new Error(\\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute \\\"' + name +\\n                '\\\" requires goog.string.Const value, \\\"' + value + '\\\" given.' :\\n                                                   '');\\n    // URL attributes handled differently according to tag.\\n  } else if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {\\n    if (value instanceof goog.html.TrustedResourceUrl) {\\n      value = goog.html.TrustedResourceUrl.unwrap(value);\\n    } else if (value instanceof goog.html.SafeUrl) {\\n      value = goog.html.SafeUrl.unwrap(value);\\n    } else if (typeof value === 'string') {\\n      value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();\\n    } else {\\n      throw new Error(\\n          goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n              'Attribute \\\"' + name + '\\\" on tag \\\"' + tagName +\\n                  '\\\" requires goog.html.SafeUrl, goog.string.Const, or' +\\n                  ' string, value \\\"' + value + '\\\" given.' :\\n              '');\\n    }\\n  }\\n\\n  // Accept SafeUrl, TrustedResourceUrl, etc. for attributes which only require\\n  // HTML-escaping.\\n  if (value.implementsGoogStringTypedString) {\\n    // Ok to call getTypedStringValue() since there's no reliance on the type\\n    // contract for security here.\\n    value =\\n        /** @type {!goog.string.TypedString} */ (value).getTypedStringValue();\\n  }\\n\\n  goog.asserts.assert(\\n      typeof value === 'string' || typeof value === 'number',\\n      'String or number value expected, got ' + (typeof value) +\\n          ' with value: ' + value);\\n  return name + '=\\\"' + goog.string.internal.htmlEscape(String(value)) + '\\\"';\\n};\\n\\n\\n/**\\n * Gets value allowed in \\\"style\\\" attribute.\\n * @param {!goog.html.SafeHtml.AttributeValue} value It could be SafeStyle or a\\n *     map which will be passed to goog.html.SafeStyle.create.\\n * @return {string} Unwrapped value.\\n * @throws {!Error} If string value is given.\\n * @private\\n */\\ngoog.html.SafeHtml.getStyleValue_ = function(value) {\\n  'use strict';\\n  if (!goog.isObject(value)) {\\n    throw new Error(\\n        goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n            'The \\\"style\\\" attribute requires goog.html.SafeStyle or map ' +\\n                'of style properties, ' + (typeof value) + ' given: ' + value :\\n            '');\\n  }\\n  if (!(value instanceof goog.html.SafeStyle)) {\\n    // Process the property bag into a style object.\\n    value = goog.html.SafeStyle.create(value);\\n  }\\n  return goog.html.SafeStyle.unwrap(value);\\n};\\n\\n\\n/**\\n * Creates a SafeHtml content with known directionality consisting of a tag with\\n * optional attributes and optional content.\\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\\n * @param {string} tagName\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n * @param {!goog.html.SafeHtml.TextOrHtml_|\\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>=} opt_content\\n * @return {!goog.html.SafeHtml} The SafeHtml content with the tag.\\n */\\ngoog.html.SafeHtml.createWithDir = function(\\n    dir, tagName, opt_attributes, opt_content) {\\n  'use strict';\\n  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);\\n  html.dir_ = dir;\\n  return html;\\n};\\n\\n\\n/**\\n * Creates a new SafeHtml object by joining the parts with separator.\\n * @param {!goog.html.SafeHtml.TextOrHtml_} separator\\n * @param {!Array<!goog.html.SafeHtml.TextOrHtml_|\\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>>} parts Parts to join. If a part\\n *     contains an array then each member of this array is also joined with the\\n *     separator.\\n * @return {!goog.html.SafeHtml}\\n */\\ngoog.html.SafeHtml.join = function(separator, parts) {\\n  'use strict';\\n  var separatorHtml = goog.html.SafeHtml.htmlEscape(separator);\\n  var dir = separatorHtml.getDirection();\\n  var content = [];\\n\\n  /**\\n   * @param {!goog.html.SafeHtml.TextOrHtml_|\\n   *     !Array<!goog.html.SafeHtml.TextOrHtml_>} argument\\n   */\\n  var addArgument = function(argument) {\\n    'use strict';\\n    if (Array.isArray(argument)) {\\n      goog.array.forEach(argument, addArgument);\\n    } else {\\n      var html = goog.html.SafeHtml.htmlEscape(argument);\\n      content.push(goog.html.SafeHtml.unwrap(html));\\n      var htmlDir = html.getDirection();\\n      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {\\n        dir = htmlDir;\\n      } else if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {\\n        dir = null;\\n      }\\n    }\\n  };\\n\\n  goog.array.forEach(parts, addArgument);\\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n      content.join(goog.html.SafeHtml.unwrap(separatorHtml)), dir);\\n};\\n\\n\\n/**\\n * Creates a new SafeHtml object by concatenating values.\\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Values to concatenate.\\n * @return {!goog.html.SafeHtml}\\n */\\ngoog.html.SafeHtml.concat = function(var_args) {\\n  'use strict';\\n  return goog.html.SafeHtml.join(\\n      goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));\\n};\\n\\n\\n/**\\n * Creates a new SafeHtml object with known directionality by concatenating the\\n * values.\\n * @param {!goog.i18n.bidi.Dir} dir Directionality.\\n * @param {...(!goog.html.SafeHtml.TextOrHtml_|\\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)} var_args Elements of array\\n *     arguments would be processed recursively.\\n * @return {!goog.html.SafeHtml}\\n */\\ngoog.html.SafeHtml.concatWithDir = function(dir, var_args) {\\n  'use strict';\\n  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));\\n  html.dir_ = dir;\\n  return html;\\n};\\n\\n\\n/**\\n * Token used to ensure that object is created only from this file. No code\\n * outside of this file can access this token.\\n * @private {!Object}\\n * @const\\n */\\ngoog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_ = {};\\n\\n\\n/**\\n * Package-internal utility method to create SafeHtml instances.\\n *\\n * @param {string} html The string to initialize the SafeHtml object with.\\n * @param {?goog.i18n.bidi.Dir} dir The directionality of the SafeHtml to be\\n *     constructed, or null if unknown.\\n * @return {!goog.html.SafeHtml} The initialized SafeHtml object.\\n * @package\\n */\\ngoog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(\\n    html, dir) {\\n  'use strict';\\n  const policy = goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();\\n  const trustedHtml = policy ? policy.createHTML(html) : html;\\n  return new goog.html.SafeHtml(\\n      trustedHtml, dir, goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_);\\n};\\n\\n\\n/**\\n * Like create() but does not restrict which tags can be constructed.\\n *\\n * @param {string} tagName Tag name. Set or validated by caller.\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n * @param {(!goog.html.SafeHtml.TextOrHtml_|\\n *     !Array<!goog.html.SafeHtml.TextOrHtml_>)=} opt_content\\n * @return {!goog.html.SafeHtml}\\n * @throws {!Error} If invalid or unsafe attribute name or value is provided.\\n * @throws {!goog.asserts.AssertionError} If content for void tag is provided.\\n * @package\\n */\\ngoog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(\\n    tagName, opt_attributes, opt_content) {\\n  'use strict';\\n  var dir = null;\\n  var result = '<' + tagName;\\n  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);\\n\\n  var content = opt_content;\\n  if (content == null) {\\n    content = [];\\n  } else if (!Array.isArray(content)) {\\n    content = [content];\\n  }\\n\\n  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {\\n    goog.asserts.assert(\\n        !content.length, 'Void tag <' + tagName + '> does not allow content.');\\n    result += '>';\\n  } else {\\n    var html = goog.html.SafeHtml.concat(content);\\n    result += '>' + goog.html.SafeHtml.unwrap(html) + '</' + tagName + '>';\\n    dir = html.getDirection();\\n  }\\n\\n  var dirAttribute = opt_attributes && opt_attributes['dir'];\\n  if (dirAttribute) {\\n    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {\\n      // If the tag has the \\\"dir\\\" attribute specified then its direction is\\n      // neutral because it can be safely used in any context.\\n      dir = goog.i18n.bidi.Dir.NEUTRAL;\\n    } else {\\n      dir = null;\\n    }\\n  }\\n\\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n      result, dir);\\n};\\n\\n\\n/**\\n * Creates a string with attributes to insert after tagName.\\n * @param {string} tagName\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n * @return {string} Returns an empty string if there are no attributes, returns\\n *     a string starting with a space otherwise.\\n * @throws {!Error} If attribute value is unsafe for the given tag and\\n *     attribute.\\n * @package\\n */\\ngoog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {\\n  'use strict';\\n  var result = '';\\n  if (opt_attributes) {\\n    for (var name in opt_attributes) {\\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\\n      if (Object.prototype.hasOwnProperty.call(opt_attributes, name)) {\\n        if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {\\n          throw new Error(\\n              goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n                  'Invalid attribute name \\\"' + name + '\\\".' :\\n                  '');\\n        }\\n        var value = opt_attributes[name];\\n        if (value == null) {\\n          continue;\\n        }\\n        result +=\\n            ' ' + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);\\n      }\\n    }\\n  }\\n  return result;\\n};\\n\\n\\n/**\\n * @param {!Object<string, ?goog.html.SafeHtml.AttributeValue>} fixedAttributes\\n * @param {!Object<string, string>} defaultAttributes\\n * @param {?Object<string, ?goog.html.SafeHtml.AttributeValue>=} opt_attributes\\n *     Optional attributes passed to create*().\\n * @return {!Object<string, ?goog.html.SafeHtml.AttributeValue>}\\n * @throws {!Error} If opt_attributes contains an attribute with the same name\\n *     as an attribute in fixedAttributes.\\n * @package\\n */\\ngoog.html.SafeHtml.combineAttributes = function(\\n    fixedAttributes, defaultAttributes, opt_attributes) {\\n  'use strict';\\n  var combinedAttributes = {};\\n  var name;\\n\\n  for (name in fixedAttributes) {\\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty#Using_hasOwnProperty_as_a_property_name\\n    if (Object.prototype.hasOwnProperty.call(fixedAttributes, name)) {\\n      goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\\n      combinedAttributes[name] = fixedAttributes[name];\\n    }\\n  }\\n  for (name in defaultAttributes) {\\n    if (Object.prototype.hasOwnProperty.call(defaultAttributes, name)) {\\n      goog.asserts.assert(name.toLowerCase() == name, 'Must be lower case');\\n      combinedAttributes[name] = defaultAttributes[name];\\n    }\\n  }\\n\\n  if (opt_attributes) {\\n    for (name in opt_attributes) {\\n      if (Object.prototype.hasOwnProperty.call(opt_attributes, name)) {\\n        var nameLower = name.toLowerCase();\\n        if (nameLower in fixedAttributes) {\\n          throw new Error(\\n              goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ?\\n                  'Cannot override \\\"' + nameLower + '\\\" attribute, got \\\"' +\\n                      name + '\\\" with value \\\"' + opt_attributes[name] + '\\\"' :\\n                  '');\\n        }\\n        if (nameLower in defaultAttributes) {\\n          delete combinedAttributes[nameLower];\\n        }\\n        combinedAttributes[name] = opt_attributes[name];\\n      }\\n    }\\n  }\\n\\n  return combinedAttributes;\\n};\\n\\n\\n/**\\n * A SafeHtml instance corresponding to the HTML doctype: \\\"<!DOCTYPE html>\\\".\\n * @const {!goog.html.SafeHtml}\\n */\\ngoog.html.SafeHtml.DOCTYPE_HTML = /** @type {!goog.html.SafeHtml} */ ({\\n  // NOTE: this compiles to nothing, but hides the possible side effect of\\n  // SafeHtml creation (due to calling trustedTypes.createPolicy) from the\\n  // compiler so that the entire call can be removed if the result is not used.\\n  valueOf: function() {\\n    'use strict';\\n    return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n        '<!DOCTYPE html>', goog.i18n.bidi.Dir.NEUTRAL);\\n  },\\n}.valueOf());\\n\\n/**\\n * A SafeHtml instance corresponding to the empty string.\\n * @const {!goog.html.SafeHtml}\\n */\\ngoog.html.SafeHtml.EMPTY = new goog.html.SafeHtml(\\n    (goog.global.trustedTypes && goog.global.trustedTypes.emptyHTML) || '',\\n    goog.i18n.bidi.Dir.NEUTRAL, goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_);\\n\\n/**\\n * A SafeHtml instance corresponding to the <br> tag.\\n * @const {!goog.html.SafeHtml}\\n */\\ngoog.html.SafeHtml.BR = /** @type {!goog.html.SafeHtml} */ ({\\n  // NOTE: this compiles to nothing, but hides the possible side effect of\\n  // SafeHtml creation (due to calling trustedTypes.createPolicy) from the\\n  // compiler so that the entire call can be removed if the result is not used.\\n  valueOf: function() {\\n    'use strict';\\n    return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\\n        '<br>', goog.i18n.bidi.Dir.NEUTRAL);\\n  },\\n}.valueOf());\\n\"],\n\"names\":[\"goog\",\"provide\",\"require\",\"html\",\"SafeHtml\",\"constructor\",\"value\",\"dir\",\"token\",\"privateDoNotAccessOrElseSafeHtmlWrappedValue_\",\"CONSTRUCTOR_TOKEN_PRIVATE_\",\"dir_\",\"ENABLE_ERROR_MESSAGES\",\"define\",\"DEBUG\",\"SUPPORT_STYLE_ATTRIBUTE\",\"prototype\",\"implementsGoogI18nBidiDirectionalString\",\"getDirection\",\"goog.html.SafeHtml.prototype.getDirection\",\"implementsGoogStringTypedString\",\"getTypedStringValue\",\"goog.html.SafeHtml.prototype.getTypedStringValue\",\"toString\",\"goog.html.SafeHtml.prototype.toString\",\"unwrap\",\"goog.html.SafeHtml.unwrap\",\"safeHtml\",\"unwrapTrustedHTML\",\"goog.html.SafeHtml.unwrapTrustedHTML\",\"asserts\",\"fail\",\"typeOf\",\"TextOrHtml_\",\"htmlEscape\",\"goog.html.SafeHtml.htmlEscape\",\"textOrHtml\",\"textIsObject\",\"textAsString\",\"String\",\"createSafeHtmlSecurityPrivateDoNotAccessOrElse\",\"string\",\"internal\",\"htmlEscapePreservingNewlines\",\"goog.html.SafeHtml.htmlEscapePreservingNewlines\",\"newLineToBr\",\"htmlEscapePreservingNewlinesAndSpaces\",\"goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces\",\"whitespaceEscape\",\"from\",\"comment\",\"goog.html.SafeHtml.comment\",\"text\",\"VALID_NAMES_IN_TAG_\",\"URL_ATTRIBUTES_\",\"object\",\"createSet\",\"NOT_ALLOWED_TAG_NAMES_\",\"dom\",\"TagName\",\"APPLET\",\"BASE\",\"EMBED\",\"IFRAME\",\"LINK\",\"MATH\",\"META\",\"OBJECT\",\"SCRIPT\",\"STYLE\",\"SVG\",\"TEMPLATE\",\"AttributeValue\",\"create\",\"goog.html.SafeHtml.create\",\"tagName\",\"opt_attributes\",\"opt_content\",\"verifyTagName\",\"createSafeHtmlTagSecurityPrivateDoNotAccessOrElse\",\"goog.html.SafeHtml.verifyTagName\",\"test\",\"Error\",\"toUpperCase\",\"createIframe\",\"goog.html.SafeHtml.createIframe\",\"opt_src\",\"opt_srcdoc\",\"TrustedResourceUrl\",\"fixedAttributes\",\"defaultAttributes\",\"attributes\",\"combineAttributes\",\"createSandboxIframe\",\"goog.html.SafeHtml.createSandboxIframe\",\"canUseSandboxIframe\",\"SafeUrl\",\"sanitize\",\"goog.html.SafeHtml.canUseSandboxIframe\",\"global\",\"createScriptSrc\",\"goog.html.SafeHtml.createScriptSrc\",\"src\",\"createScript\",\"goog.html.SafeHtml.createScript\",\"script\",\"attr\",\"Object\",\"hasOwnProperty\",\"call\",\"attrLower\",\"toLowerCase\",\"content\",\"array\",\"concat\",\"i\",\"length\",\"SafeScript\",\"htmlContent\",\"i18n\",\"bidi\",\"Dir\",\"NEUTRAL\",\"createStyle\",\"goog.html.SafeHtml.createStyle\",\"styleSheet\",\"SafeStyleSheet\",\"createMetaRefresh\",\"goog.html.SafeHtml.createMetaRefresh\",\"url\",\"opt_secs\",\"unwrappedUrl\",\"labs\",\"userAgent\",\"browser\",\"isIE\",\"isEdge\",\"contains\",\"replace\",\"getAttrNameAndValue_\",\"goog.html.SafeHtml.getAttrNameAndValue_\",\"name\",\"Const\",\"getStyleValue_\",\"assert\",\"goog.html.SafeHtml.getStyleValue_\",\"isObject\",\"SafeStyle\",\"createWithDir\",\"goog.html.SafeHtml.createWithDir\",\"join\",\"goog.html.SafeHtml.join\",\"separator\",\"parts\",\"separatorHtml\",\"addArgument\",\"argument\",\"Array\",\"isArray\",\"forEach\",\"push\",\"htmlDir\",\"goog.html.SafeHtml.concat\",\"var_args\",\"EMPTY\",\"slice\",\"arguments\",\"concatWithDir\",\"goog.html.SafeHtml.concatWithDir\",\"goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse\",\"policy\",\"trustedtypes\",\"getPolicyPrivateDoNotAccessOrElse\",\"trustedHtml\",\"createHTML\",\"goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse\",\"result\",\"stringifyAttributes\",\"tags\",\"isVoidTag\",\"dirAttribute\",\"goog.html.SafeHtml.stringifyAttributes\",\"goog.html.SafeHtml.combineAttributes\",\"combinedAttributes\",\"nameLower\",\"DOCTYPE_HTML\",\"valueOf\",\"trustedTypes\",\"emptyHTML\",\"BR\"]\n}\n"]